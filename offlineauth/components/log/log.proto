syntax = "proto3";

package rhinelog;

option go_package = "github.com/rhine-team/RHINE-Prototype/offlineAuth/components/log";

// Service offered by the log
service LogService {
  rpc DSProofRet (DSProofRetRequest) returns (DSProofRetResponse) {}
  
  rpc DemandLogging (DemandLoggingRequest) returns (DemandLoggingResponse) {}

  rpc SubmitACFM (SubmitACFMRequest) returns (SubmitACFMResponse) {}

}

message RhineSig {
  bytes Data = 1;
  bytes Sig = 2;
  int32 Supportedalgo = 3;
  bytes DataPostfix = 4;
}

message Lwit {
	repeated string DesignatedLogs = 1;
	string Log = 2;
	bytes NdsHash = 3;
	bytes Sig = 4;
	bytes Data = 5;
}

message Acfm {
	string AggIdent = 1;
	bytes NdsHash = 2;
	bytes DSum = 3;
}



message DSProofRetRequest {
	string Parentzone = 1;
	string Childzone = 2;
}

message DSProofRetResponse {
	bytes DSPBytes = 1;
}



message DemandLoggingRequest {
  RhineSig Acsr = 1;
  bytes ParentRcert = 2;
  bytes ChildPreRC = 3;
  bytes Nds = 4;
  bytes Rid = 5;
}

message DemandLoggingResponse {
  Lwit LogWitness = 1;
  bytes Rid = 2;
}



message SubmitACFMRequest {
  repeated bytes Acfms = 1;
  bytes Rid = 2;
}

message SubmitACFMResponse {
  bytes Lcfm = 1;
  bytes SCT = 2;
  bytes Rid = 3;
}

/*
message NDS {
  string log = 1;
  string zone = 2;
  int32 authoritylvl = 3;
  bytes tbscert = 4;
  bytes exp = 5;
  bytes sig = 6;
}

message LogWitness {
  string log = 1;
  bytes sig = 2;
}

// deprecated
message LogAppendRequest {
  bytes rid = 1;
  bytes csr = 2;
  RhineSig approval_commit = 3;
  bytes parent_cert = 4;
  NDS new_delegation = 5;
}

// deprecated
message LogAppendResponse {
  bytes rid = 1;
  LogWitness lwit = 2;
}
*/